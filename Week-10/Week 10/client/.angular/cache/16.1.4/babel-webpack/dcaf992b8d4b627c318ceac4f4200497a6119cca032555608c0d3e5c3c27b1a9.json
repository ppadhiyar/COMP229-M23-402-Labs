{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let Cart = /*#__PURE__*/(() => {\n  class Cart {\n    constructor() {\n      this.lines = [];\n      this.itemCount = 0;\n      this.cartPrice = 0;\n    }\n    addLine(book, quantity = 1) {\n      const line = this.lines.find(l => l.book._id === book._id);\n      if (line !== undefined) {\n        line.quantity += quantity;\n      } else {\n        this.lines.push(new CartLine(book, quantity));\n      }\n      this.recalculate();\n    }\n    updateQuantity(book, quantity) {\n      const line = this.lines.find(l => l.book._id === book._id);\n      if (line !== undefined) {\n        line.quantity = Number(quantity);\n      }\n      this.recalculate();\n    }\n    removeLine(id) {\n      const index = this.lines.findIndex(l => l.book._id === id);\n      this.lines.splice(index, 1);\n      this.recalculate();\n    }\n    clear() {\n      this.lines = [];\n      this.itemCount = 0;\n      this.cartPrice = 0;\n    }\n    recalculate() {\n      this.itemCount = 0;\n      this.cartPrice = 0;\n      this.lines.forEach(l => {\n        this.itemCount += l.quantity;\n        this.cartPrice += l.quantity * l.book.price;\n      });\n    }\n  }\n  Cart.ɵfac = function Cart_Factory(t) {\n    return new (t || Cart)();\n  };\n  Cart.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Cart,\n    factory: Cart.ɵfac\n  });\n  return Cart;\n})();\nexport class CartLine {\n  constructor(book, quantity) {\n    this.book = book;\n    this.quantity = quantity;\n  }\n  get lineTotal() {\n    return this.quantity * this.book.price;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}